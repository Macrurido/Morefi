% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fn_dfa.R
\name{fn_dfa}
\alias{fn_dfa}
\title{fn_dfa}
\usage{
fn_dfa(eq)
}
\arguments{
\item{eq}{Summary of the equation fitted.}
}
\value{
A tibble data frame provides the original data along with information about the model.
}
\description{
The `fn_dfa()` function uses the `augment()` function from the `broom` package
to extract the observed values of the independent variable (x) and dependent
variable (y), along with the weights (wi), fitted values (fitt), and residuals
(ei) from the summary of the fitted model. It then turns these components
into tidy tibbles.
}
\details{
The function `augment()` does not provide the weights column for the `lmrob()`
function. The function `fn_dfa()` contains a conditional statement that
includes this variable in the output data frame of the linear adjustments.

In order to homogenizes the results, the columns names were renamed as "y",
"wi","x","fitt",and "ei".

An additional column has been included that codes errors using a scale based
on weighted values: unweighted (u), weighted (w), and outliers (o)
`dfa$scale <- ifelse(df$wi < 0.25, "o", ifelse(df$wi<1, "w", "u"))`.

For more information, please refer to the help documentation for `broom::augment()`.
}
\examples{
## Example 1: robust linear regression
 \dontrun{
df <- df
eq <- robustbase::lmrob(y1 ~ x1, data= df,setting = "KS2014")

dfa <- augment(eq)
}

## Example 2: robust nonlinear regression
\dontrun{
df <- df
eq <- nlrob(y1 ~ a*x1^b, data= datos,
start = list(a= a, b= b),
trace = FALSE)

dfa <- augment(eq)
}

}
\seealso{
broom::augment
}
